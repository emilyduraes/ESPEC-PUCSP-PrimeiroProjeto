variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode"
  APP_NAME: virtual-trainer
  PROJECT_NAME: clear-safeguard-315223
  SONAR_URL: "http://35.194.7.240:9000"
  SONAR_LOGIN: e757d66e66e227a78ea5e2f385caeaec4d7e8384

stages:
  - code_analysis
  - package
  - build
  - publish
  
before_script:
    - REVISION_STABLE=${CI_COMMIT_TAG}
    - REVISION_UNSTABLE=${CI_COMMIT_REF_SLUG}+sha.${CI_COMMIT_SHA:0:8}

sonarqube:issues:
  stage: code_analysis
  image: maven:latest
  script:
    - mvn --batch-mode verify sonar:sonar -DskipTests=true -Drevision=$REVISION_UNSTABLE -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.gitlab.project_id=$CI_PROJECT_PATH -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.gitlab.failure_notification_mode=exit-code -Dsonar.analysis.mode=issues
  only:
    - pipeline
    
sonarqube:publish:
  stage: code_analysis
  image: maven:latest
  script:
    - mvn --batch-mode verify sonar:sonar -Drevision=$REVISION_STABLE -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.gitlab.project_id=$CI_PROJECT_PATH -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.gitlab.failure_notification_mode=exit-code -Dsonar.analysis.mode=publish
    
  only:
    - pipeline  
  

package:
  stage: package
  image: maven:latest
  cache:
    paths:
      - .m2/repository/
  script:
    - mvn clean package -DskipTest
  artifacts:
    paths:
      - target/*.jar

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  variables:
    DOCKER_IMAGE_TAG: 'gcr.io/$PROJECT_NAME/virtual-trainer/$CI_COMMIT_BRANCH'
  script:
    - export GOOGLE_APPLICATION_CREDENTIALS=/kaniko/kaniko-secret.json
    - echo $GOOGLE_APPLICATION_CREDENTIALS_BASE64 | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS 
    - /kaniko/executor --context=$CI_PROJECT_DIR --dockerfile=Dockerfile --destination=$DOCKER_IMAGE_TAG:latest --cache=true
  only:
    - master
    - pipeline

production:
  stage: publish
  image: google/cloud-sdk:257.0.0
  environment: production
  script:
    - echo $GOOGLE_APPLICATION_CREDENTIALS_BASE64 | base64 -d > key.json
    - gcloud auth activate-service-account --key-file=key.json 
    - gcloud config set project $PROJECT_NAME
    - gcloud config set compute/zone us-central1-a
    - gcloud container clusters get-credentials cluster-1
    - kubectl apply -f gke/deployment.yaml
    - kubectl rollout restart deployment.apps/virtual-trainer
  only:
    - master
  when: manual
