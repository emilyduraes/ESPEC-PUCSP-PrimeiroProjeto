variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode"
  APP_NAME: virtual-trainer
  PROJECT_NAME: clear-safeguard-315223
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

  sonarcloud-check:
  image: maven:3.6.3-jdk-11
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar
  only:
    - merge_requests
    - master
    - develop

stages:
  - package
  - build
  - publish

package:
  stage: package
  image: maven:latest
  cache:
    paths:
      - .m2/repository/
  script:
    - mvn clean package -DskipTest
  artifacts:
    paths:
      - target/*.jar

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  variables:
    DOCKER_IMAGE_TAG: 'gcr.io/$PROJECT_NAME/virtual-trainer/$CI_COMMIT_BRANCH'
  script:
    - export GOOGLE_APPLICATION_CREDENTIALS=/kaniko/kaniko-secret.json
    - echo $GOOGLE_APPLICATION_CREDENTIALS_BASE64 | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS 
    - /kaniko/executor --context=$CI_PROJECT_DIR --dockerfile=Dockerfile --destination=$DOCKER_IMAGE_TAG:latest --cache=true
  only:
    - master

production:
  stage: publish
  image: google/cloud-sdk:257.0.0
  environment: production
  script:
    - echo $GOOGLE_APPLICATION_CREDENTIALS_BASE64 | base64 -d > key.json
    - gcloud auth activate-service-account --key-file=key.json 
    - gcloud config set project $PROJECT_NAME
    - gcloud config set compute/zone us-central1-a
    - gcloud container clusters get-credentials cluster-1
    - kubectl apply -f gke/deployment.yaml
    - kubectl rollout restart deployment.apps/virtual-trainer
  only:
    - master
  when: manual
